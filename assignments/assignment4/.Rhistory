knitr::opts_chunk$set(echo = TRUE)
beta_binom <- function(Y, N, theta0, type, a = 1, b = 1,
title = "Prior and Posterior Distribution")
{
# beta_binom() - returns a list of posterior mean and variance values where
# the prior distribution follows Beta and the posterior is Binomial
# Arguments:
# Y = number of success for Binomial
# N = number of trials for Binomial
# a, b are size and rate parameters for prior Beta distribution
# theta0 = hypothesized value for unknown parameter
# type = type of hypothesis test to be conducted (one-sided or two-sided)
A <- Y + a
B <- N - Y + b
if (type == "left" | type == "right") { # one sided
# compute priors
prior.h0 <- pbeta(theta0, a, b)
prior.h1 <- 1 - prior.h0
prior.odds <- prior.h1 / prior.h0
# compute posterior probability for null, alternative, and odds
posterior.h0 <- pbeta(theta0, A, B)
posterior.h1 <- 1 - posterior.h0
posterior.odds <- posterior.h1 / posterior.h0
# Compute Bayes Factor for one-sided test
bayes.factor <- posterior.odds / prior.odds
} else if (type == "two sided") { # two sided
# choose machine epsilon as epsilon
#epsilon = .Machine$double.eps
epsilon = 0.000000003
# compute priors
prior.h0<-pbeta((theta0+epsilon),a,b)-pbeta((theta0-epsilon),a,b)
prior.h1 <- 1 - prior.h0
prior.odds <- prior.h1 / prior.h0
# compute posteriors
posterior.h0<-pbeta((theta0+epsilon),A, B) - pbeta((theta0-epsilon),A,B)
posterior.h1 <- 1 - posterior.h0
posterior.odds <- posterior.h1 / posterior.h0
# compute two-sides Bayes Factor
bayes.factor <- posterior.odds / prior.odds
}
mylist <- list(prior.h0, posterior.h0, bayes.factor)
names(mylist) <- c("Prior Null", "Posterior Null", "Bayes Factor")
return(mylist)
}
# uninformative prior
beta_binom(Y=20, N=30, theta0=0.5, type = "right", a = 1, b = 1)
